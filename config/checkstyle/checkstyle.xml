<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.3//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_3.dtd">

<module name="Checker">
    <!--
    Enforces English locale to be independent from the
    default locale which may vary between environments.
    -->
    <property name="localeLanguage" value="en"/>

    <!--
    Checks that each Java package has a Javadoc file
    used for commenting.
    -->
    <module name="JavadocPackage"/>

    <!--
    Checks that property files contain the same keys.
    -->
    <module name="Translation"/>

    <!--
    Maximum number of lines in any .java file is limited.
    -->
    <module name="FileLength">
        <property name="max" value="1000"/>
        <property name="fileExtensions" value="java"/>
    </module>

    <!--
    C++ style inline comment is not allowed.
    -->
    <module name="RegexpSingleline">
        <property name="format" value="/\*.*\*/"/>
        <property name="message" value="This kind of comment is not allowed."/>
    </module>

    <!--
    Windows line endings are not allowed.
    -->
    <module name="RegexpMultiline">
        <property name="format" value="\r\n$"/>
        <property name="message"
                  value="Lines in file should end with Unix-like end of line"/>
    </module>

    <!--
    Two consecutive empty lines are not allowed.
    -->
    <module name="RegexpMultiline">
        <property name="format" value="\r?\n[ \t\x0B\f]*\r?\n[ \t\x0B\f]*\r?\n"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Two consecutive empty lines"/>
    </module>

    <!--
    JavaDoc regexp checks
    -->
    <module name="RegexpSingleline">
        <property name="format" value="\* +@return +[^A-Z]"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="@return tag description should start with capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="\* +@param +\w+ +[^A-Z]"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="@param tag description should start with capital letter"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\([\w\.]\.class\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Using class as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="org\.apache\.commons\.(codec|lang3?)\.CharEncoding"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Use 'java.nio.charset.StandardCharsets' instead"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="^ *="/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Line cannot start with this symbol, move it to the previous line"/>
    </module>

    <!--
    Multithreading checks
    -->
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\(this\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Using THIS as a lock is a bad practice (use class variable instead)"/>
    </module>
    <module name="RegexpSingleline">
        <property name="format" value="synchronized +\([\w\.]\.class\) +\{"/>
        <property name="fileExtensions" value="java"/>
        <property name="message" value="Using class as a lock is a bad practice (use class variable instead)"/>
    </module>

    <!--
    Enable suppressions
    -->
    <module name="TreeWalker">
        <module name="SuppressWithNearbyCommentFilter">
            <property name="commentFormat" value="@checkstyle (\w+) \((\d+) lines?\)"/>
            <property name="checkFormat" value="$1"/>
            <property name="influenceFormat" value="$2"/>
        </module>


        <!-- Checks for annotations. -->
        <module name="AnnotationUseStyle">
            <property name="elementStyle" value="compact_no_array"/>
            <property name="trailingArrayComma" value="never"/>
            <property name="closingParens" value="ignore"/>
        </module>
        <module name="MissingDeprecated"/>
        <module name="MissingOverride"/>
        <module name="PackageAnnotation"/>
        <module name="SuppressWarnings"/>

        <!-- Checks for blocks. -->
        <module name="EmptyBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>
        <module name="AvoidNestedBlocks"/>

        <!-- Checks for class design. -->
        <module name="VisibilityModifier"/>
        <module name="FinalClass"/>
        <module name="InterfaceIsType"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="DesignForExtension"/>
        <module name="MutableException"/>
        <module name="ThrowsCount" />

        <!-- Checks for common coding problems -->
        <module name="ArrayTrailingComma"/>
        <module name="AvoidInlineConditionals"/>
        <module name="CovariantEquals"/>
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <module name="FinalLocalVariable"/>
        <module name="IllegalInstantiation"/>
        <module name="IllegalToken"/>
        <module name="IllegalTokenText" />
        <module name="InnerAssignment"/>
        <module name="MagicNumber"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="NestedForDepth"/>
        <module name="NestedIfDepth"/>
        <module name="NestedTryDepth"/>
        <module name="NoClone"/>
        <module name="NoFinalizer"/>
        <module name="SuperClone"/>
        <module name="SuperFinalize"/>
        <module name="IllegalCatch"/>
        <module name="IllegalThrows"/>
        <module name="PackageDeclaration"/>
        <module name="IllegalType"/>
        <module name="ParameterAssignment"/>
        <module name="ExplicitInitialization"/>
        <module name="DefaultComesLast"/>
        <module name="FallThrough"/>
        <module name="MultipleVariableDeclarations"/>
        <module name="RequireThis">
            <property name="checkFields" value="true"/>
            <property name="checkMethods" value="true"/>
            <property name="validateOnlyOverlapping" value="false"/>
        </module>
        <module name="UnnecessaryParentheses"/>
        <module name="OneStatementPerLine"/>

        <!-- Checks for imports. -->
        <module name="IllegalImport"/>
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>

        <!-- Metrics. -->
        <module name="BooleanExpressionComplexity"/>
        <module name="ClassDataAbstractionCoupling"/>
        <module name="ClassFanOutComplexity">
            <!--
            Total number of classes that a particular class
            depends on. We're increasing this value because
            default "20" is too low.
            -->
            <property name="max" value="30"/>
        </module>
        <module name="CyclomaticComplexity"/>
        <module name="NPathComplexity"/>
        <module name="JavaNCSS"/>

        <!-- Miscellaneous other checks. -->
        <module name="TodoComment"/>
        <module name="UpperEll"/>
        <module name="ArrayTypeStyle"/>
        <module name="FinalParameters">
            <property name="tokens" value="CTOR_DEF,METHOD_DEF,FOR_EACH_CLAUSE,LITERAL_CATCH"/>
        </module>
        <module name="CommentsIndentation"/>
        <module name="TrailingComment"/>
        <module name="OuterTypeFilename"/>

        <!-- Modifier Checks. -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>

        <!-- Checks for Naming Conventions. -->
        <module name="AbbreviationAsWordInNameCheck"/>
        <module name="ClassTypeParameterName"/>
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName"/>
        <module name="LocalVariableName"/>
        <module name="CatchParameterName"/>
        <module name="MemberName"/>
        <module name="MethodName"/>
        <module name="MethodTypeParameterName"/>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>

        <!-- Checks for Size Violations. -->
        <module name="ExecutableStatementCount">
            <property name="max" value="20"/>
        </module>
        <module name="AnonInnerLength" />
        <module name="MethodLength"/>
        <module name="ParameterNumber">
            <property name="max" value="5"/>
        </module>
        <module name="OuterTypeNumber"/>
        <module name="MethodCount"/>

        <!-- Checks for whitespace. -->
        <module name="GenericWhitespace"/>
        <module name="EmptyForInitializerPad"/>
        <module name="EmptyForIteratorPad"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap"/>
        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>
        <module name="EmptyLineSeparator">
            <property name="allowMultipleEmptyLines" value="false"/>
            <property name="allowMultipleEmptyLinesInsideClassMembers" value="false"/>
            <property name="tokens" value="IMPORT,CLASS_DEF,INTERFACE_DEF,ENUM_DEF,STATIC_INIT,INSTANCE_INIT,METHOD_DEF,CTOR_DEF"/>
        </module>
    </module>
</module>